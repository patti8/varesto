/* eslint-disable no-unused-vars */
/* eslint-disable max-len */
import FavoriteMovieSearchPresenter from '../src/scripts/views/resto/liked-movies/favorite-movie-search-presenter';
import FavoriteRestoIdb from '../src/scripts/data/favoriteresto-idb';

describe('Searching movies', () => {
  beforeEach(() => {
    document.body.innerHTML = `
        <div id="movie-search-container">
            <input id="query" type="text">
            <div class="movie-result-container">
                <ul class="movies">
                </ul>
            </div>
        </div>
        `;
  });

  it('should be able to capture the query typed by the user', () => {
    spyOn(FavoriteRestoIdb, 'searchMovies');
    const presenter = new FavoriteMovieSearchPresenter({
      favoriteMovies: FavoriteRestoIdb,
    });

    const queryElement = document.getElementById('query');
    queryElement.value = 'film a';
    queryElement.dispatchEvent(new Event('change'));

    expect(presenter.latestQuery).toEqual('film a');
  });

  it('should ask the model to search for liked movies', () => {
    spyOn(FavoriteRestoIdb, 'searchMovies');
    const presenter = new FavoriteMovieSearchPresenter({favoriteMovies: FavoriteRestoIdb});

    const queryElement = document.getElementById('query');
    queryElement.value = 'film a';
    queryElement.dispatchEvent(new Event('change'));

    expect(FavoriteRestoIdb.searchMovies)
        .toHaveBeenCalledWith('film a');
  });
});
